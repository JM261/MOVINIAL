<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<comment>일반게시판 관련 쿼리문들</comment>
	
	<entry key="selectListCount">
		SELECT COUNT(*) COUNT
		  FROM COMMUNITY
		 WHERE STATUS = 'Y'
	</entry>

	<entry key="selectListFilterCount">
		SELECT COUNT(*) COUNT
		  FROM COMMUNITY
		 WHERE STATUS = 'Y'
           AND COMMUNITY_CATEGORY = ?
	</entry>
	
	<entry key="selectListSearchTitleNcontentCount">
		SELECT COUNT(*) COUNT
		  FROM COMMUNITY
		 WHERE STATUS = 'Y'
		   AND COMMUNITY_TITLE LIKE ?
		    OR COMMUNITY_CONTENT LIKE ?
	</entry>
	
	<entry key="selectListSearchTitleCount">
		SELECT COUNT(*) COUNT
		  FROM COMMUNITY
		 WHERE STATUS = 'Y'
		   AND COMMUNITY_TITLE LIKE ?
	</entry>
	
	<entry key="selectListSearchContentCount">
		SELECT COUNT(*) COUNT
		  FROM COMMUNITY
		 WHERE STATUS = 'Y'
		   AND COMMUNITY_CONTENT LIKE ?
	</entry>
	
	<entry key="selectListSearchWriterCount">
		SELECT COUNT(*) COUNT
		  FROM COMMUNITY C
		  JOIN MEMBER ON (COMMUNITY_WRITER = MEMBER_NO)
		 WHERE C.STATUS = 'Y'
		   AND NICKNAME LIKE ?
	</entry>
	
	<entry key="selectList">
		SELECT *
			FROM (
			      SELECT ROWNUM RNUM, A.*
			        FROM (
                            SELECT COMMUNITY_NO, COMMUNITY_CATEGORY, COMMUNITY_TITLE, NICKNAME, CREATE_DATE, VIEWS, LIKES, SPOILER, REPORT_COUNT, ISNOTICE
                              FROM COMMUNITY C
                              JOIN MEMBER ON (COMMUNITY_WRITER = MEMBER_NO)
                             WHERE C.STATUS = 'Y'
                             ORDER 
                                BY ISNOTICE DESC, CREATE_DATE DESC) A)
			WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="selectListFilter">
		SELECT *
			FROM (
			      SELECT ROWNUM RNUM, A.*
			        FROM (
                            SELECT COMMUNITY_NO, COMMUNITY_CATEGORY, COMMUNITY_TITLE, NICKNAME, CREATE_DATE, VIEWS, LIKES, SPOILER, REPORT_COUNT, ISNOTICE
                              FROM COMMUNITY C
                              JOIN MEMBER ON (COMMUNITY_WRITER = MEMBER_NO)
                             WHERE C.STATUS = 'Y'
                               AND COMMUNITY_CATEGORY = ?
                             ORDER 
                                BY ISNOTICE DESC, CREATE_DATE DESC) A)
			WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="selectListSearchTitleNcontent">
		SELECT *
			FROM (
			      SELECT ROWNUM RNUM, A.*
			        FROM (
                            SELECT COMMUNITY_NO, COMMUNITY_CATEGORY, COMMUNITY_TITLE, NICKNAME, CREATE_DATE, VIEWS, LIKES, SPOILER, REPORT_COUNT, ISNOTICE
                              FROM COMMUNITY C
                              JOIN MEMBER ON (COMMUNITY_WRITER = MEMBER_NO)
                             WHERE C.STATUS = 'Y'
                               AND COMMUNITY_TITLE LIKE ?
                                OR COMMUNITY_CONTENT LIKE ?
                             ORDER 
                                BY ISNOTICE DESC, CREATE_DATE DESC) A)
			WHERE RNUM BETWEEN ? AND ?
	</entry>

	<entry key="selectListSearchTitle">
		SELECT *
			FROM (
			      SELECT ROWNUM RNUM, A.*
			        FROM (
                            SELECT COMMUNITY_NO, COMMUNITY_CATEGORY, COMMUNITY_TITLE, NICKNAME, CREATE_DATE, VIEWS, LIKES, SPOILER, REPORT_COUNT, ISNOTICE
                              FROM COMMUNITY C
                              JOIN MEMBER ON (COMMUNITY_WRITER = MEMBER_NO)
                             WHERE C.STATUS = 'Y'
                               AND COMMUNITY_TITLE LIKE ?
                             ORDER 
                                BY ISNOTICE DESC, CREATE_DATE DESC) A)
			WHERE RNUM BETWEEN ? AND ?
	</entry>

	<entry key="selectListSearchContent">
		SELECT *
			FROM (
			      SELECT ROWNUM RNUM, A.*
			        FROM (
                            SELECT COMMUNITY_NO, COMMUNITY_CATEGORY, COMMUNITY_TITLE, NICKNAME, CREATE_DATE, VIEWS, LIKES, SPOILER, REPORT_COUNT, ISNOTICE
                              FROM COMMUNITY C
                              JOIN MEMBER ON (COMMUNITY_WRITER = MEMBER_NO)
                             WHERE C.STATUS = 'Y'
                               AND COMMUNITY_CONTENT LIKE ?
                             ORDER 
                                BY ISNOTICE DESC, CREATE_DATE DESC) A)
			WHERE RNUM BETWEEN ? AND ?
	</entry>

	<entry key="selectListSearchWriter">
		SELECT *
			FROM (
			      SELECT ROWNUM RNUM, A.*
			        FROM (
                            SELECT COMMUNITY_NO, COMMUNITY_CATEGORY, COMMUNITY_TITLE, NICKNAME, CREATE_DATE, VIEWS, LIKES, SPOILER, REPORT_COUNT, ISNOTICE
                              FROM COMMUNITY C
                              JOIN MEMBER ON (COMMUNITY_WRITER = MEMBER_NO)
                             WHERE C.STATUS = 'Y'
                               AND NICKNAME LIKE ?
                             ORDER 
                                BY ISNOTICE DESC, CREATE_DATE DESC) A)
			WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="insertCommunity">
		INSERT INTO COMMUNITY(COMMUNITY_NO, COMMUNITY_TITLE, COMMUNITY_CATEGORY, COMMUNITY_WRITER, 
                    COMMUNITY_CONTENT, SPOILER)
				VALUES(SEQ_CNO.NEXTVAL, ?, ?, ?, ?, ?)
	</entry>
	
	<entry key="insertCommunityFile">
		INSERT INTO C_FILE(FILE_NO, REF_CNO, ORIGIN_NAME, CHANGE_NAME, FILE_PATH)
		VALUES(SEQ_CFNO.NEXTVAL, SEQ_CNO.CURRVAL, ?, ?, ?)
	</entry>
	
	<entry key="increaseCount">
		UPDATE COMMUNITY
		   SET VIEWS = VIEWS + 1
		 WHERE COMMUNITY_NO = ?
		   AND STATUS = 'Y'
	</entry>
	
	<entry key="increaseLike">
		UPDATE COMMUNITY
		   SET LIKES = LIKES + 1
		 WHERE COMMUNITY_NO = ?
		   AND STATUS = 'Y'
	</entry>

	<entry key="decreaseLike">
		UPDATE COMMUNITY
		   SET LIKES = LIKES - 1
		 WHERE COMMUNITY_NO = ?
		   AND STATUS = 'Y'
	</entry>	
	
	<entry key="communityLikesStore">
		UPDATE LIKES_COMMUNITY
		   SET LIKES_COMMUNITY = LIKES_COMMUNITY || ?
		 WHERE MEMBER_NO = ?
	</entry>
	
	<entry key="communityLikesremove">
		UPDATE LIKES_COMMUNITY
		   SET LIKES_COMMUNITY = replace(LIKES_COMMUNITY, ? ,'')
		 WHERE MEMBER_NO = ?
	</entry>
	
	<entry key="selectCommunityLikes">
		SELECT LIKES_COMMUNITY
		  FROM LIKES_COMMUNITY
		 WHERE MEMBER_NO = ?
	</entry>
	
	<entry key="selectCommunity">
		SELECT COMMUNITY_NO, COMMUNITY_CATEGORY, COMMUNITY_TITLE, COMMUNITY_CONTENT, NICKNAME, CREATE_DATE, VIEWS, LIKES, SPOILER, REPORT_COUNT, ISNOTICE, COMMUNITY_WRITER
		  FROM COMMUNITY C
		  JOIN MEMBER ON (COMMUNITY_WRITER = MEMBER_NO)
		 WHERE COMMUNITY_NO = ?
		   AND C.STATUS = 'Y'
	</entry>
	
	<entry key="selectCommunityFile">
		SELECT FILE_NO, ORIGIN_NAME, CHANGE_NAME, FILE_PATH
		  FROM C_FILE
		 WHERE REF_CNO = ?
	</entry>
	
	<entry key="updateCommunity">
		UPDATE COMMUNITY
		   SET COMMUNITY_CATEGORY = ?
		     , COMMUNITY_TITLE =?
		     , COMMUNITY_CONTENT = ?
		     , SPOILER = ?
		 WHERE COMMUNITY_NO = ?
	</entry>
	
	<entry key="updateCommunityFile">
		UPDATE C_FILE
		   SET ORIGIN_NAME = ?
		     , CHANGE_NAME = ?
		     , FILE_PATH = ?
		     , MODIFY_DATE = SYSDATE
		 WHERE FILE_NO = ?
	</entry>
	
	<entry key="insertNewCommunityFile">
		INSERT INTO C_FILE(FILE_NO, REF_CNO, ORIGIN_NAME, CHANGE_NAME, FILE_PATH)
		VALUES(SEQ_CFNO.NEXTVAL, ?, ?, ?, ?)
	</entry>
	
	<entry key="deleteCommunity">
		UPDATE COMMUNITY
		   SET STATUS = 'N'
		 WHERE COMMUNITY_NO = ?
	</entry>
	
	<entry key="insertThumbnailBoard">
		INSERT INTO BOARD(BOARD_NO, BOARD_TYPE, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER)
			 VALUES(SEQ_BNO.NEXTVAL, 2, ?, ?, ?)
	</entry>
	
	<entry key="insertAttachmentList">
		INSERT INTO ATTACHMENT(FILE_NO, REF_BNO, ORIGIN_NAME, CHANGE_NAME, FILE_PATH, FILE_LEVEL)
			 VALUES(SEQ_FNO.NEXTVAL, SEQ_BNO.CURRVAL, ?, ?, ?, ?)
	</entry>
	
	<entry key="selectThumbnailList">
		SELECT BOARD_NO, BOARD_TITLE, COUNT, FILE_PATH||CHANGE_NAME "TITLEIMG"
		  FROM BOARD B
		  JOIN ATTACHMENT ON(BOARD_NO = REF_BNO)
		 WHERE BOARD_TYPE = 2
		   AND B.STATUS = 'Y'
		   AND FILE_LEVEL = 1
		 ORDER 
		 	BY BOARD_NO DESC
	</entry>
	
	<entry key="selectReplyList">
		SELECT REPLY_NO, REPLY_CONTENT, NICKNAME, TO_CHAR(CREATE_DATE, 'YY/MM/DD HH24:MI:SS') "CREATE_DATE", MEMBER_NO, REPORT_COUNT
		  FROM REPLY R
		  JOIN MEMBER ON (REPLY_WRITER = MEMBER_NO)
		 WHERE REF_CNO = ?
		   AND R.STATUS = 'Y'
		 ORDER
		    BY CREATE_DATE ASC
	</entry>
	
	<entry key="insertReply">
		INSERT INTO REPLY(REPLY_NO, REF_CNO, REPLY_WRITER, REPLY_CONTENT)
		VALUES(SEQ_RNO.NEXTVAL, ?, ?, ?)
	</entry>
	
</properties>
